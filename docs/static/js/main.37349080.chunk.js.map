{"version":3,"sources":["images/sad.svg","images/happy.svg","components/getSmileFace.js","components/MoodRegister.js","components/Home.js","components/MoodInput.js","components/Editor.js","images/logoInsideMood.svg","components/Landing.js","images/logoBlanco.svg","components/Footer.js","components/App.js","reportWebVitals.js","index.js"],"names":["getSmileFace","mood","happy","sad","MoodRegister","moodItem","className","src","alt","moment","date","format","message","Home","moodDataArr","btnNewRecordHandler","to","onClick","map","index","MoodInput","inputId","textLabel","moodInputsHandler","htmlFor","type","name","value","id","checked","includes","onChange","Editor","btnSaveHandler","btnCancelHandler","rows","cols","maxLength","placeholder","Landing","Logo","title","Footer","LogoBlanco","href","target","rel","App","props","e","currentTarget","setState","prevState","moodData","storeInfoLS","state","Date","JSON","parse","localStorage","getItem","bind","resetMoodData","this","concat","sort","a","b","setItem","stringify","exact","path","component","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.37349080.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/sad.0364e9fc.svg\";","export default __webpack_public_path__ + \"static/media/happy.a46008c2.svg\";","import sad from \"../images/sad.svg\";\r\nimport happy from \"../images/happy.svg\";\r\n\r\nconst getSmileFace = (mood) => {\r\n  if (mood === \":)\") {\r\n    return happy;\r\n  } else if (mood === \":(\") {\r\n    return sad;\r\n  }\r\n};\r\n\r\nexport default getSmileFace;\r\n","import React from \"react\";\r\nimport moment from \"moment\";\r\nimport \"../stylesheets/MoodRegister.scss\";\r\nimport getSmileFace from \"./getSmileFace\";\r\n\r\nconst MoodRegister = ({ moodItem }) => {\r\n  return (\r\n    <>\r\n      <img\r\n        className=\"calendar__image\"\r\n        src={getSmileFace(moodItem.mood)}\r\n        alt={moodItem.mood}\r\n      />\r\n      <div className=\"calendar__text\">\r\n        <p className=\"calendar__text--date\">\r\n          {moment(moodItem.date).format(\"MMMM Do YYYY\")}\r\n        </p>\r\n        <p className=\"calendar__text--message\">{moodItem.message}</p>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MoodRegister;\r\n","import React from \"react\";\r\nimport \"../stylesheets/Home.scss\";\r\nimport MoodRegister from \"./MoodRegister\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../stylesheets/MoodRegister.scss\";\r\n\r\nconst Home = ({ moodDataArr, btnNewRecordHandler }) => {\r\n  return (\r\n    <>\r\n      <div className=\"home\">\r\n        <div className=\"home__text\">\r\n          <h1 className=\"home__text--title\">How was your day?</h1>\r\n          <h4 className=\"home__text--subtitle\">\r\n            Start by adding your mood today!\r\n          </h4>\r\n        </div>\r\n        <Link to=\"/editor\">\r\n          <button className=\"home__btn\" onClick={btnNewRecordHandler}>\r\n            +\r\n          </button>\r\n        </Link>\r\n      </div>\r\n      <div>\r\n        <ul className=\"calendarList\">\r\n          {moodDataArr.map((moodItem, index) => {\r\n            return (\r\n              <li key={index} className=\"calendar\">\r\n                <MoodRegister moodItem={moodItem} />\r\n              </li>\r\n            );\r\n          })}\r\n        </ul>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport \"../stylesheets/MoodInput.scss\";\r\nimport getSmileFace from \"./getSmileFace\";\r\n\r\nconst MoodInput = ({ inputId, textLabel, mood, moodInputsHandler }) => {\r\n  return (\r\n    <>\r\n      <label className=\"mood\" htmlFor=\"mood\">\r\n        <input\r\n          type=\"radio\"\r\n          name=\"mood\"\r\n          className=\"mood__input\"\r\n          value={textLabel}\r\n          id={inputId}\r\n          checked={mood.includes(textLabel)}\r\n          onChange={moodInputsHandler}\r\n        />\r\n        <img\r\n          className=\"mood__emoji\"\r\n          src={getSmileFace(textLabel)}\r\n          alt={textLabel}\r\n        />\r\n      </label>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MoodInput;\r\n","import React from \"react\";\r\nimport \"../stylesheets/Editor.scss\";\r\nimport { Link } from \"react-router-dom\";\r\nimport MoodInput from \"./MoodInput\";\r\n\r\nconst Editor = ({\r\n  date,\r\n  mood,\r\n  message,\r\n  moodInputsHandler,\r\n  btnSaveHandler,\r\n  btnCancelHandler,\r\n}) => {\r\n  return (\r\n    <div className=\"editor\">\r\n      <h1 className=\"editor__title\">How was your day?</h1>\r\n      <form className=\"editor__form\">\r\n        <label htmlFor=\"date\" className=\"editor__form--date\">\r\n          Choose a date\r\n        </label>\r\n        <input\r\n          className=\"editor__form--dateInput\"\r\n          type=\"date\"\r\n          id=\"date\"\r\n          name=\"date\"\r\n          value={date}\r\n          onChange={moodInputsHandler}\r\n        />\r\n        <label className=\"editor__form--textMood\" htmlFor=\"state\">\r\n          Please select your mood\r\n        </label>\r\n        <div className=\"editor__form--mood\">\r\n          <MoodInput\r\n            inputId=\"moodHappy\"\r\n            textLabel=\":)\"\r\n            mood={mood}\r\n            moodInputsHandler={moodInputsHandler}\r\n          />\r\n          <MoodInput\r\n            inputId=\"moodHappy\"\r\n            textLabel=\":(\"\r\n            mood={mood}\r\n            moodInputsHandler={moodInputsHandler}\r\n          />\r\n        </div>\r\n        <textarea\r\n          className=\"editor__form--message\"\r\n          name=\"message\"\r\n          id=\"message\"\r\n          rows=\"6\"\r\n          cols=\"35\"\r\n          maxLength=\"280\"\r\n          placeholder=\"Why do you feel like this?\"\r\n          value={message}\r\n          onChange={moodInputsHandler}\r\n        ></textarea>\r\n        <div className=\"editor__form--buttons\">\r\n          <Link to=\"/calendar\">\r\n            <button className=\"btnSave\" onClick={btnSaveHandler}>\r\n              Save\r\n            </button>\r\n          </Link>\r\n          <Link to=\"/calendar\">\r\n            <button className=\"btnCancel\" onClick={btnCancelHandler}>\r\n              Cancel\r\n            </button>\r\n          </Link>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Editor;\r\n","export default __webpack_public_path__ + \"static/media/logoInsideMood.28ef18f2.svg\";","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../stylesheets/Landing.scss\";\r\nimport Logo from \"../images/logoInsideMood.svg\";\r\n\r\nconst Landing = () => {\r\n  return (\r\n    <>\r\n      <div className=\"landing\">\r\n        <img\r\n          className=\"landing__img\"\r\n          src={Logo}\r\n          alt=\"Logo de la aplicación Inside mood calendar\"\r\n        />\r\n        <Link to=\"/calendar\">\r\n          <button className=\"landing__button\" title=\"Start your calendar mood!\">\r\n            Start\r\n          </button>\r\n        </Link>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Landing;\r\n","export default __webpack_public_path__ + \"static/media/logoBlanco.f43ec85d.svg\";","import React from \"react\";\r\nimport \"../stylesheets/Footer.scss\";\r\nimport LogoBlanco from \"../images/logoBlanco.svg\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <>\r\n      <footer className=\"footer\">\r\n        <Link to=\"/\" title=\"Back to landing\">\r\n          <img\r\n            className=\"footer__logo\"\r\n            src={LogoBlanco}\r\n            alt=\"Logo de la aplicación Inside mood calendar\"\r\n          />\r\n        </Link>\r\n        <nav>\r\n          <ul className=\"social\">\r\n            <li className=\"social__item\">\r\n              <a\r\n                href=\"https://github.com/IreneRuedaVega\"\r\n                target=\"_blank\"\r\n                title=\"Github\"\r\n                className=\"social__item--github\"\r\n                rel=\"noreferrer\"\r\n              >\r\n                <i className=\"fab fa-github-alt\"></i>\r\n              </a>\r\n            </li>\r\n            <li className=\"social__item\">\r\n              <a\r\n                href=\"//linkedin.com/in/ireneruedavega\"\r\n                target=\"_blank\"\r\n                title=\"Linkedin\"\r\n                className=\"social__item--linkedin\"\r\n                rel=\"noreferrer\"\r\n              >\r\n                <i className=\"fab fa-linkedin-in\"></i>\r\n              </a>\r\n            </li>\r\n            <li className=\"social__item\">\r\n              <a\r\n                href=\"//twitter.com/Irenelandia_\"\r\n                target=\"_blank\"\r\n                title=\"Twitter\"\r\n                className=\"social__item--twitter\"\r\n                rel=\"noreferrer\"\r\n              >\r\n                <i className=\"fab fa-twitter\"></i>\r\n              </a>\r\n            </li>\r\n          </ul>\r\n        </nav>\r\n      </footer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React from \"react\";\nimport \"../stylesheets/App.scss\";\nimport Home from \"./Home\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Editor from \"./Editor\";\nimport moment from \"moment\";\nimport Landing from \"./Landing\";\nimport Footer from \"./Footer\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      moodData: {\n        date: moment(new Date()).format(\"YYYY-MM-DD\"),\n        mood: \"\",\n        message: \"\",\n      },\n      moodDataArr: JSON.parse(localStorage.getItem(\"moodDataStored\")) || [],\n    };\n    this.moodInputsHandler = this.moodInputsHandler.bind(this);\n    this.storeInfoLS = this.storeInfoLS.bind(this);\n    this.btnSaveHandler = this.btnSaveHandler.bind(this);\n    this.resetMoodData = this.resetMoodData.bind(this);\n  }\n\n  storeInfoLS() {\n    this.setState(\n      (prevState) => {\n        return {\n          moodDataArr: prevState.moodDataArr\n            .concat(prevState.moodData)\n            //Sort dates by reformating them with moment\n            .sort(\n              (a, b) =>\n                moment(a.date).format(\"YYYYMMDD\") -\n                moment(b.date).format(\"YYYYMMDD\")\n            ),\n        };\n      },\n      () =>\n        localStorage.setItem(\n          \"moodDataStored\",\n          JSON.stringify(this.state.moodDataArr)\n        )\n    );\n  }\n\n  moodInputsHandler = (e) => {\n    const { value, name } = e.currentTarget;\n\n    this.setState((prevState) => {\n      return {\n        moodData: {\n          ...prevState.moodData,\n          [name]: value,\n        },\n      };\n    });\n  };\n\n  btnSaveHandler = (e) => {\n    this.storeInfoLS();\n  };\n\n  resetMoodData() {\n    this.setState({\n      moodData: {\n        date: moment(new Date()).format(\"YYYY-MM-DD\"),\n        mood: \":)\",\n        message: \"\",\n      },\n    });\n  }\n\n  render() {\n    const { date, mood, message } = this.state.moodData;\n    const { moodDataArr } = this.state;\n    return (\n      <>\n        <main className=\"App\">\n          <Switch>\n            <Route exact path=\"/\" component={Landing} />\n            <Route path=\"/calendar\">\n              <Home\n                moodDataArr={moodDataArr}\n                btnNewRecordHandler={this.state.resetMoodData}\n              />\n            </Route>\n            <Route path=\"/editor\">\n              <Editor\n                date={date}\n                mood={mood}\n                message={message}\n                moodInputsHandler={this.moodInputsHandler}\n                btnSaveHandler={this.btnSaveHandler}\n                btnCancelHandler={this.resetMoodData}\n              />\n            </Route>\n          </Switch>\n        </main>\n        <Footer />\n      </>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { HashRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}